%!PS-Adobe-2.0
%%Title: TIPS/k01029_TV_all_radar.ps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Thu Feb 21 10:15:27 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (TIPS/k01029_TV_all_radar.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (jarvist)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Feb 21 10:15:27 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
1.000 UL
LTa
3579 2520 M
stroke
LTb
3579 2520 M
stroke
3579 2380 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4166 2520 M
-3 58 V
-8 58 V
-15 57 V
-20 55 V
-26 53 V
-30 50 V
-36 47 V
-40 43 V
-44 39 V
-48 34 V
-51 29 V
-53 24 V
-56 19 V
-58 13 V
-58 7 V
-59 1 V
-58 -5 V
-58 -10 V
-57 -16 V
-54 -22 V
-52 -27 V
-49 -32 V
-46 -37 V
-42 -41 V
-37 -46 V
-33 -48 V
-28 -52 V
-22 -55 V
-17 -56 V
-11 -58 V
-6 -58 V
1 -59 V
6 -58 V
12 -58 V
18 -56 V
23 -54 V
29 -51 V
34 -48 V
38 -45 V
42 -40 V
47 -37 V
49 -31 V
53 -26 V
55 -21 V
57 -15 V
58 -10 V
58 -3 V
59 2 V
58 8 V
57 14 V
56 19 V
53 25 V
50 30 V
48 35 V
43 40 V
39 43 V
35 48 V
30 50 V
25 54 V
19 55 V
14 57 V
7 59 V
2 58 V
stroke
LTb
4166 2520 M
stroke
4166 2380 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4754 2520 M
-6 117 V
-17 116 V
-29 114 V
-41 110 V
-51 106 V
-61 100 V
-71 94 V
-80 86 V
-89 77 V
-95 69 V
-102 58 V
-107 48 V
-112 37 V
-115 26 V
-116 14 V
-118 3 V
-117 -10 V
-116 -20 V
-113 -33 V
-109 -43 V
-104 -55 V
-98 -64 V
-92 -74 V
-83 -82 V
-75 -91 V
-66 -97 V
-55 -104 V
-45 -109 V
-34 -112 V
-22 -116 V
-11 -117 V
1 -117 V
12 -117 V
25 -115 V
35 -112 V
47 -108 V
57 -102 V
68 -97 V
76 -89 V
85 -81 V
93 -73 V
99 -62 V
105 -53 V
110 -41 V
114 -31 V
116 -19 V
117 -7 V
117 4 V
117 16 V
114 28 V
111 39 V
106 50 V
101 60 V
95 70 V
87 79 V
78 87 V
70 95 V
60 101 V
49 107 V
38 111 V
28 114 V
15 117 V
4 117 V
stroke
LTb
4754 2520 M
stroke
4754 2380 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5342 2520 M
-9 176 V
-26 174 V
-44 171 V
-60 165 V
-77 159 V
-92 150 V
-107 141 V
-120 129 V
-132 116 V
-144 103 V
-153 87 V
-160 72 V
-168 56 V
-172 38 V
-175 22 V
-176 3 V
-176 -14 V
-173 -31 V
-170 -49 V
-163 -65 V
-157 -81 V
-147 -97 V
2403 3835 L
2278 3711 L
2166 3575 L
-99 -146 V
-83 -156 V
-67 -163 V
-51 -169 V
-33 -173 V
-17 -175 V
2 -176 V
19 -176 V
36 -172 V
54 -168 V
70 -162 V
86 -154 V
101 -145 V
114 -133 V
128 -122 V
139 -109 V
149 -94 V
158 -78 V
164 -63 V
171 -45 V
174 -29 V
176 -11 V
176 7 V
174 24 V
172 41 V
166 59 V
160 74 V
151 91 V
142 105 V
130 118 V
118 131 V
105 142 V
89 152 V
74 160 V
58 167 V
41 171 V
23 175 V
6 176 V
stroke
LTb
5342 2520 M
stroke
5342 2380 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5930 2520 M
-12 234 V
-35 233 V
-58 227 V
-81 221 V
-102 212 V
-123 200 V
-142 187 V
-160 172 V
-177 155 V
-191 137 V
-204 117 V
-214 96 V
-223 74 V
-230 52 V
-233 28 V
-235 5 V
-234 -19 V
-232 -41 V
-226 -65 V
-218 -87 V
2391 4549 L
2195 4421 L
2012 4273 L
1845 4108 L
1695 3927 L
1564 3732 L
1453 3524 L
-90 -217 V
-68 -225 V
-44 -231 V
-22 -234 V
2 -235 V
25 -233 V
49 -230 V
71 -224 V
94 -216 V
114 -205 V
135 -193 V
1871 902 L
2041 740 L
2227 595 L
2426 470 L
2636 365 L
220 -83 V
227 -61 V
232 -38 V
234 -15 V
235 9 V
233 32 V
229 56 V
221 77 V
213 100 V
202 120 V
189 140 V
174 158 V
157 175 V
139 190 V
120 202 V
98 213 V
77 222 V
55 229 V
31 233 V
8 235 V
stroke
LTb
5930 2520 M
stroke
5930 2380 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3579 2520 M
2351 0 V
-2351 0 R
5615 3695 L
3579 2520 M
4754 4556 L
3579 2520 M
0 2351 V
0 -2351 R
2403 4556 L
3579 2520 M
1542 3695 L
3579 2520 M
-2352 0 V
2352 0 R
1542 1344 L
3579 2520 M
2403 483 L
3579 2520 M
3578 168 L
1 2352 R
4754 483 L
3579 2520 M
5615 1344 L
3579 2520 M
2351 0 V
-2351 0 R
5615 3695 L
1.000 UP
stroke
LTb
% Begin plot #1
2.000 UL
LT0
1.00 0.00 0.00 C /Helvetica findfont 140 scalefont setfont
4054 2520 M
15 31 V
9 32 V
3 33 V
-3 33 V
-10 31 V
-15 30 V
-20 26 V
-25 22 V
-30 18 V
-32 14 V
-35 8 V
-37 3 V
-37 -2 V
-37 -7 V
-36 -12 V
-34 -16 V
-31 -20 V
-28 -22 V
-24 -24 V
-21 -26 V
-17 -25 V
-12 -25 V
-10 -24 V
-6 -21 V
-3 -19 V
-1 -14 V
0 -12 V
0 -7 V
1 -3 V
-1 1 V
-2 5 V
-5 8 V
-7 11 V
-11 12 V
-15 15 V
-18 15 V
-23 14 V
-26 14 V
-30 11 V
-32 9 V
-35 5 V
-36 2 V
-37 -3 V
-37 -7 V
-36 -11 V
-34 -16 V
-31 -21 V
-27 -24 V
-23 -28 V
-17 -30 V
-12 -32 V
-6 -33 V
0 -33 V
6 -32 V
12 -30 V
18 -28 V
23 -25 V
28 -20 V
31 -16 V
34 -11 V
36 -5 V
37 -1 V
37 5 V
36 10 V
35 14 V
33 17 V
29 21 V
27 24 V
22 25 V
19 26 V
15 25 V
11 24 V
7 23 V
5 20 V
2 16 V
1 14 V
-1 9 V
-1 5 V
0 1 V
2 -3 V
3 -6 V
6 -10 V
9 -12 V
13 -13 V
17 -15 V
20 -15 V
24 -14 V
28 -13 V
31 -10 V
34 -7 V
36 -4 V
37 1 V
37 5 V
36 9 V
35 14 V
33 18 V
29 23 V
25 26 V
20 29 V
% End plot #1
% Begin plot #2
stroke
LT0
0.00 0.00 0.00 C /Helvetica findfont 140 scalefont setfont
4260 2520 M
61 47 V
54 54 V
46 61 V
35 65 V
25 69 V
13 70 V
1 70 V
-11 67 V
-23 63 V
-35 58 V
-44 50 V
-53 41 V
-61 31 V
-67 20 V
-71 8 V
-73 -3 V
-73 -14 V
-71 -25 V
-68 -35 V
-63 -44 V
-57 -52 V
-50 -57 V
-43 -61 V
-34 -64 V
-25 -64 V
-18 -62 V
-10 -60 V
-4 -54 V
1 -49 V
6 -42 V
7 -34 V
9 -25 V
8 -18 V
5 -9 V
1 -2 V
-4 5 V
-11 10 V
-17 14 V
-26 17 V
-34 17 V
-42 17 V
-49 14 V
-57 11 V
-62 5 V
-67 -2 V
-70 -9 V
-71 -18 V
-71 -26 V
-68 -35 V
-63 -43 V
-58 -51 V
-50 -58 V
-41 -63 V
-30 -67 V
-19 -70 V
-7 -70 V
5 -69 V
17 -65 V
29 -61 V
40 -54 V
49 -45 V
57 -36 V
64 -26 V
69 -14 V
72 -3 V
73 8 V
73 20 V
70 30 V
65 40 V
61 48 V
53 55 V
47 59 V
38 63 V
29 64 V
22 63 V
14 61 V
7 58 V
1 51 V
-4 46 V
-6 38 V
-9 29 V
-8 22 V
-7 13 V
-3 6 V
1 -2 V
7 -7 V
15 -12 V
21 -16 V
30 -17 V
38 -18 V
46 -16 V
53 -12 V
59 -8 V
65 -2 V
69 6 V
70 13 V
72 22 V
69 30 V
66 39 V
% End plot #2
% Begin plot #3
stroke
LT0
0.00 1.00 0.00 C /Helvetica findfont 140 scalefont setfont
5116 2520 M
71 102 V
54 110 V
34 115 V
15 116 V
-7 116 V
-26 112 V
-47 105 V
-65 95 V
-82 83 V
-96 68 V
-108 52 V
-118 34 V
-124 16 V
-126 -2 V
-127 -19 V
-124 -37 V
-118 -51 V
-109 -65 V
-100 -75 V
-88 -84 V
-76 -89 V
-63 -91 V
-49 -91 V
-38 -87 V
-26 -81 V
-17 -73 V
-9 -62 V
-3 -51 V
-1 -37 V
-1 -25 V
-2 -11 V
-8 0 V
-15 13 V
-24 21 V
-34 30 V
-47 34 V
-59 37 V
-72 37 V
-84 35 V
-96 28 V
-106 21 V
-114 10 V
-119 -2 V
-123 -15 V
-123 -30 V
-121 -45 V
-114 -60 V
-105 -74 V
-94 -86 V
-79 -98 V
-63 -106 V
-44 -113 V
-24 -116 V
-4 -117 V
16 -114 V
37 -109 V
56 -100 V
74 -89 V
89 -76 V
103 -60 V
113 -43 V
121 -25 V
126 -8 V
127 11 V
125 29 V
121 44 V
115 58 V
105 71 V
94 79 V
82 87 V
69 91 V
56 91 V
44 89 V
31 85 V
21 77 V
13 67 V
6 57 V
2 44 V
0 31 V
2 18 V
5 5 V
10 -6 V
19 -17 V
29 -26 V
41 -33 V
53 -36 V
65 -37 V
78 -36 V
91 -32 V
101 -25 V
110 -15 V
117 -5 V
122 9 V
123 23 V
122 37 V
118 52 V
110 67 V
100 80 V
86 92 V
% End plot #3
stroke
1.000 UL
LTb
3579 2520 M
2351 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
